<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
        <mapper namespace="com.doc.xushi.mapper.AddressMapper">

    <insert id="addUserAddress" useGeneratedKeys="true" keyProperty="addressId" parameterType="com.doc.xushi.entity.po.AddressPo">
        INSERT INTO `t_user_address`
                    (`user_id`,
                     `name`,
                     `address`,
                     `phone`,
                     `is_default`,
                     `valid`,
                     create_time,
                     update_time)
        VALUES (#{userId},
                #{name},
                #{address},
                #{phone},
                #{isDefault},
                #{valid},
                now(),now())
    </insert>
    <update id="updateUserAddress" parameterType="com.doc.xushi.entity.po.AddressPo">
        UPDATE `t_user_address`
        <set>
            <if test="name!=null">
                `name` = #{name},
            </if>
            <if test="address!=null">
                `address` = #{address},
            </if>
            <if test="phone!=null">
                `phone` = #{phone},
            </if>
            <if test="isDefault!=null">
                `is_default` = #{is_default},
            </if>
            <if test="valid!=null">
                `valid` = #{valid},
            </if>
            `update_time` = 'update_time'
        </set>
        WHERE `address_id` = #{addressId} and user_id =#{userId}
    </update>

    <update id="updateNoDefault" parameterType="java.lang.Long">
         UPDATE `t_user_address`
            set is_default =0
         WHEN  user_id =#{userId}
    </update>

    <select id="getAddressList" parameterType="com.doc.xushi.entity.vo.PageVo" resultType="com.doc.xushi.entity.po.AddressPo">
        SELECT
          `address_id`,
          `user_id`,
          `name`,
          `address`,
          `phone`,
          `is_default`
        FROM `t_user_address`
        where user_id =#{userId} and valid =1
        order by create_time desc
         LIMIT #{index} ,#{pageSize}
    </select>
</mapper>